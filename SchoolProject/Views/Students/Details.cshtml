@model SchoolProject.Models.Student

@{
    ViewBag.Title = "Student Details";
    ViewBag.HideNavbar = true;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - SchoolWeb</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            color: #343a40; /* Default text color */
            margin: 0; /* Remove default margin */
            background: url('/images/pen.jpg'); /* Background image */
            background-size: cover;
            background-position: center;
            font-family: Arial, sans-serif;
        }

        .header-buttons {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

            .header-buttons .btn {
                border-radius: 50px; /* Rounded corners */
                padding: 10px 20px; /* Padding */
                font-size: 16px; /* Font size */
                display: flex;
                align-items: center;
                gap: 8px; /* Space between icon and text */
            }

        .btn-back {
            background-color: #007bff; /* Blue color */
            color: white; /* White text color */
            border: none; /* No border */
        }

            .btn-back:hover {
                opacity: 0.9; /* Hover effect */
            }

        .container {
            padding-top: 5px; /* Top padding */
        }

        .card {
            background-color: rgba(255, 255, 255, 0.6); /* White background with 60% opacity */
            border-radius: 15px; /* Rounded corners */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Light shadow */
            padding: 20px;
        }

        .card-header {
            background: linear-gradient(to right, #f0ca56, #f9bb00); /* Gradient yellow background */
            color: #fff;
            border-bottom: 1px solid #dee2e6;
            border-top-left-radius: 15px; /* Rounded corners */
            border-top-right-radius: 15px; /* Rounded corners */
            border-radius: 15px !important;
            padding: 15px;
            font-size: 1.25rem;
            text-align: center;
        }

        .dl-horizontal dt {
            text-align: left;
            font-weight: bold;
            color: #343a40; /* Dark text color for labels */
        }

        .dl-horizontal dd {
            margin-left: 0;
            color: #495057; /* Slightly lighter text color for details */
        }

        .table {
            margin-top: 20px; /* Top margin */
            border-radius: 15px; /* Rounded corners */
            overflow: hidden; /* Ensure that the borders are rounded */
        }

            .table thead th {
                background-color: #f9bb00; /* Yellow background for headers */
                color: #fff; /* White text color */
                font-weight: bold; /* Bold text */
                border: none; /* Remove border */
                padding: 15px; /* Padding for headers */
            }

            .table tbody tr:nth-child(odd) {
                background-color: #f9f9f9; /* Light grey background for odd rows */
            }

            .table tbody tr:nth-child(even) {
                background-color: #fff; /* White background for even rows */
            }

            .table td {
                vertical-align: middle; /* Center align text vertically */
                padding: 15px; /* Padding for cells */
                font-size: 1rem; /* Adjust font size for readability */
                color: #495057; /* Slightly lighter text color */
            }

            .table thead th, .table tbody td {
                border: 1px solid #dee2e6; /* Border color for cells */
            }

        .h3-enrolled-courses {
            font-size: 1.5rem;
            color: #343a40; /* Dark text color for better readability */
            margin-bottom: 20px; /* Space below the title */
            border-bottom: 2px solid #f9bb00; /* Underline with yellow color */
            padding-bottom: 10px; /* Padding below the title */
            font-weight: bold; /* Bold font for title */
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

        .btn-secondary {
            background-color: #6c757d;
            border-color: #6c757d;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <div class="container">
            <div class="header-buttons mb-4">
                <a href="@Url.Action("Index", "Students")" class="btn btn-back">
                    <i class="fas fa-arrow-left"></i> Back
                </a>
            </div>

            <div class="card mx-auto" style="max-width: 800px;">
                <div class="card-header">
                    <h4 class="mb-0">Student Details</h4>
                </div>
                <div class="card-body">
                    <h4>Student</h4>
                    <hr />
                    <dl class="dl-horizontal">
                        <dt>@Html.DisplayNameFor(model => model.StudentId)</dt>
                        <dd>@Html.DisplayFor(model => model.StudentId)</dd>
                        <dt>@Html.DisplayNameFor(model => model.StudentName)</dt>
                        <dd>@Html.DisplayFor(model => model.StudentName)</dd>
                        <dt>@Html.DisplayNameFor(model => model.IsActive)</dt>
                        <dd>@(Model.IsActive == true ? "Yes" : "No")</dd>
                        <dt>@Html.DisplayNameFor(model => model.IsDeleted)</dt>
                        <dd>@(Model.IsDeleted == true ? "Yes" : "No")</dd>
                        <dt>@Html.DisplayNameFor(model => model.CreatedDate)</dt>
                        <dd>@(Model.CreatedDate.HasValue ? Model.CreatedDate.Value.ToString("dd-MM-yyyy") : "N/A")</dd>
                        <dt>@Html.DisplayNameFor(model => model.UpdatedDate)</dt>
                        <dd>@(Model.UpdatedDate.HasValue ? Model.UpdatedDate.Value.ToString("dd-MM-yyyy") : "N/A")</dd>
                        <dt>@Html.DisplayNameFor(model => model.DeletedDate)</dt>
                        <dd>@(Model.DeletedDate.HasValue ? Model.DeletedDate.Value.ToString("dd-MM-yyyy") : "N/A")</dd>
                    </dl>

                    <h3 class="h3-enrolled-courses">Enrolled Courses</h3>
                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>Course Name</th>
                                <th>Teacher(s)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.StudentCourses.Any())
                            {
                                var hasValidCourse = false;
                                foreach (var studentCourse in Model.StudentCourses)
                                {
                                    if (studentCourse.Course != null && !(bool)studentCourse.Course.IsDeleted)
                                    {
                                        hasValidCourse = true;
                                        <tr>
                                            <td>@studentCourse.Course.CourseName</td>
                                            <td>
                                                @if (studentCourse.Teacher != null && !(bool)studentCourse.Teacher.IsDeleted)
                                                {
                                                    @studentCourse.Teacher.TeacherName
                                                }
                                                else
                                                {
                                                    <span>No Teacher</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                }
                                if (!hasValidCourse)
                                {
                                    <tr>
                                        <td colspan="2">No Course Assigned</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="2">No Course Assigned</td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <div class="text-center mt-4">
                        <a href="@Url.Action("Edit", new { id = Model.StudentId })" class="btn btn-primary">Edit</a>
                        @Html.ActionLink("Back to List", "Index", new { id = Model.StudentId }, new { @class = "btn btn-secondary" })
                    </div>
                </div>
            </div>
        </div>

        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")
        <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    </div>
</body>
</html>
